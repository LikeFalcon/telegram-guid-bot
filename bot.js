const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

const token = process.env.BOT_TOKEN;
const adminId = parseInt(process.env.ADMIN_ID);

const bot = new TelegramBot(token, {polling: true});

let guides = {};
let userLastGuide = {};

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const opts = {
    reply_markup: {
      keyboard: [
        ['üìö –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–∞–π–¥—ã']
      ],
      resize_keyboard: true
    }
  };
  bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –≥–∞–π–¥–∞–º–∏. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', opts);
});

bot.onText(/\/add_guide (.+) (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  
  if (msg.from.id !== adminId) {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–∞–π–¥–æ–≤');
    return;
  }

  const guideName = match[1];
  const guideContent = match[2];
  guides[guideName] = guideContent;
  
  bot.sendMessage(chatId, `–ì–∞–π–¥ "${guideName}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`);
});

bot.on('message', (msg) => {
  if (msg.text !== 'üìö –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–∞–π–¥—ã') return;
  
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  const now = Date.now();
  if (userLastGuide[userId] && now - userLastGuide[userId] < 24 * 60 * 60 * 1000) {
    const timeLeft = 24 * 60 * 60 * 1000 - (now - userLastGuide[userId]);
    const hoursLeft = Math.floor(timeLeft / (60 * 60 * 1000));
    const minutesLeft = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
    bot.sendMessage(chatId, `–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –≥–∞–π–¥ —Å–µ–≥–æ–¥–Ω—è. –°–ª–µ–¥—É—é—â–∏–π –≥–∞–π–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${hoursLeft} —á–∞—Å–æ–≤ ${minutesLeft} –º–∏–Ω—É—Ç`);
    return;
  }

  if (Object.keys(guides).length === 0) {
    bot.sendMessage(chatId, '–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–∞–π–¥–æ–≤');
    return;
  }

  const opts = {
    reply_markup: {
      inline_keyboard: Object.keys(guides).map(name => [{
        text: name,
        callback_data: name
      }])
    }
  };
  
  bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≥–∞–π–¥:', opts);
});

bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const userId = query.from.id;
  const guideName = query.data;

  if (guides[guideName]) {
    userLastGuide[userId] = Date.now();
    bot.sendMessage(chatId, guides[guideName]);
  }
  
  bot.answerCallbackQuery(query.id);
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');
