const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

const bot = new TelegramBot(process.env.BOT_TOKEN, {polling: true});
const adminId = parseInt(process.env.ADMIN_ID);

const guides = new Map();
let userLastGuide = new Map();

bot.onText(/\/start/, async (msg) => {
    const keyboard = {
        reply_markup: {
            keyboard: [['üìö –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–∞–π–¥—ã']],
            resize_keyboard: true
        }
    };
    await bot.sendMessage(msg.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –≥–∞–π–¥–∞–º–∏. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', keyboard);
});

bot.onText(/\/add_guide (.+) (.+)/, async (msg, match) => {
    if (msg.from.id !== adminId) {
        await bot.sendMessage(msg.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–∞–π–¥–æ–≤');
        return;
    }

    const guideName = match[1];
    const guideContent = match[2];
    guides.set(guideName, guideContent);
    await bot.sendMessage(msg.chat.id, `–ì–∞–π–¥ "${guideName}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`);
});

bot.on('message', async (msg) => {
    if (msg.text !== 'üìö –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–∞–π–¥—ã') return;

    const chatId = msg.chat.id;
    const userId = msg.from.id;

    const now = Date.now();
    const lastGuideTime = userLastGuide.get(userId);
    
    if (lastGuideTime && now - lastGuideTime < 24 * 60 * 60 * 1000) {
        const timeLeft = 24 * 60 * 60 * 1000 - (now - lastGuideTime);
        const hoursLeft = Math.floor(timeLeft / (60 * 60 * 1000));
        const minutesLeft = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
        await bot.sendMessage(chatId, `–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –≥–∞–π–¥ —Å–µ–≥–æ–¥–Ω—è. –°–ª–µ–¥—É—é—â–∏–π –≥–∞–π–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${hoursLeft} —á–∞—Å–æ–≤ ${minutesLeft} –º–∏–Ω—É—Ç`);
        return;
    }

    if (guides.size === 0) {
        await bot.sendMessage(chatId, '–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–∞–π–¥–æ–≤');
        return;
    }

    const keyboard = {
        reply_markup: {
            inline_keyboard: Array.from(guides.keys()).map(name => [{
                text: name,
                callback_data: name.substring(0, 64)
            }])
        }
    };

    await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≥–∞–π–¥:', keyboard);
});

bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const userId = query.from.id;
    const guideName = query.data;

    if (guides.has(guideName)) {
        userLastGuide.set(userId, Date.now());
        await bot.sendMessage(chatId, guides.get(guideName));
    }
    
    await bot.answerCallbackQuery(query.id);
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');
